{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"Studio.libraries['react']\"","webpack:///external \"Studio\"","webpack:///./studio/constants.js","webpack:///./studio/main_dev.js","webpack:///./studio/AssetProperties.js","webpack:///./studio/TemplatePdfUtilsProperties.js","webpack:///./studio/PdfUtilsTitle.js","webpack:///./studio/PdfUtilsEditor.js","webpack:///./studio/style.scss"],"names":["PDF_UTILS_TAB_TITLE","PDF_UTILS_TAB_EDITOR","Constants","Studio","addPropertiesComponent","TemplatePdfUtilsProperties","title","entity","__entitySet","recipe","includes","AssetProperties","name","addEditorComponent","PdfUtilsEditor","addTabTitleComponent","PdfUtilsTitle","Properties","props","onChange","pdfSign","changePdfSign","change","password","passwordRaw","passwordFilled","v","target","value","entities","Component","removeInvalidTemplateReferences","removeInvalidAssetReferences","openTab","key","_id","editorComponentKey","titleComponentKey","pdfOperations","hasTemplateReferences","updatedOperations","filter","o","templateShortid","length","Object","keys","k","shortid","updatedAssetItems","certificateAssetShortid","openEditor","pdfMeta","pdfPassword","getTemplate","getEntityByShortid","map","join","extra","push","ownerPassword","__isDirty","EntityRefSelect","state","activeTab","updateEntity","assign","type","index","update","i","forEach","metaKey","every","newEntity","a","tmp","operation","minWidth","references","templates","e","selected","updateOperation","mergeToFront","checked","mergeWholeDocument","renderForEveryPage","enabled","backgroundColor","removeOperation","moveUp","moveDown","styles","operationTable","renderOperation","overflowX","tabContainer","tabTitles","tabTitle","active","setState","tabPanel","marginTop","renderOperations","addOperation","paddingBottom","updateMeta","author","subject","keywords","creator","producer","updatePassword","printing","modifying","copying","annotating","fillingForms","contentAccessibility","documentAssembly","updateSign","data","assets","reason"],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n","module.exports = Studio.libraries['react'];","module.exports = Studio;","export const PDF_UTILS_TAB_TITLE = 'PDF_UTILS_TAB_TITLE'\nexport const PDF_UTILS_TAB_EDITOR = 'PDF_UTILS_TAB_EDITOR'\n","import Studio from 'jsreport-studio'\r\nimport AssetProperties from './AssetProperties'\r\nimport TemplatePdfUtilsProperties from './TemplatePdfUtilsProperties.js'\r\nimport PdfUtilsTitle from './PdfUtilsTitle.js'\r\nimport PdfUtilsEditor from './PdfUtilsEditor.js'\r\nimport * as Constants from './constants.js'\r\n\r\nStudio.addPropertiesComponent(TemplatePdfUtilsProperties.title, TemplatePdfUtilsProperties, (entity) => (\r\n  entity.__entitySet === 'templates' && entity.recipe.includes('pdf')\r\n))\r\n\r\nStudio.addPropertiesComponent(AssetProperties.title, AssetProperties, (entity) => entity.__entitySet === 'assets' && entity.name && entity.name.includes('.p12'))\r\n\r\nStudio.addEditorComponent(Constants.PDF_UTILS_TAB_EDITOR, PdfUtilsEditor)\r\nStudio.addTabTitleComponent(Constants.PDF_UTILS_TAB_TITLE, PdfUtilsTitle)\r\n","import React, { Component } from 'react'\r\n\r\nclass Properties extends Component {\r\n  static title (entity, entities) {\r\n    if (!entity.pdfSign) {\r\n      return 'pdf sign'\r\n    }\r\n\r\n    return entity.pdfSign.passwordFilled ? 'pdf sign password filled' : 'pdf sign'\r\n  }\r\n\r\n  render () {\r\n    const { entity, onChange } = this.props\r\n\r\n    const pdfSign = entity.pdfSign || {}\r\n\r\n    const changePdfSign = (change) => onChange({ ...entity, pdfSign: { ...entity.pdfSign, ...change } })\r\n\r\n    let password = pdfSign.passwordRaw\r\n\r\n    if (password == null || password === '') {\r\n      password = pdfSign.passwordFilled === true ? '******' : ''\r\n    }\r\n\r\n    return (\r\n      <div className='properties-section'>\r\n        <div className='form-group'><label>password</label>\r\n          <input\r\n            type='password' value={password}\r\n            onChange={(v) => changePdfSign({ passwordRaw: v.target.value })} />\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Properties\r\n","import React, { Component } from 'react'\r\nimport Studio from 'jsreport-studio'\r\nimport * as Constants from './constants.js'\r\n\r\nexport default class Properties extends Component {\r\n  static title (entity, entities) {\r\n    if (\r\n      (!entity.pdfOperations || entity.pdfOperations.length === 0) &&\r\n      entity.pdfMeta == null &&\r\n      entity.pdfPassword == null &&\r\n      (entity.pdfSign == null || entity.pdfSign.certificateAssetShortid == null)\r\n    ) {\r\n      return 'pdf utils'\r\n    }\r\n\r\n    let title = 'pdf utils:'\r\n\r\n    const getTemplate = (shortid) => Studio.getEntityByShortid(shortid, false) || { name: '' }\r\n\r\n    if (entity.pdfOperations && entity.pdfOperations.length > 0) {\r\n      title = `${title} ${entity.pdfOperations.map(o => getTemplate(o.templateShortid).name).join(', ')}`\r\n    }\r\n\r\n    let extra = []\r\n\r\n    if (entity.pdfMeta != null) {\r\n      extra.push('meta')\r\n    }\r\n\r\n    if (\r\n      entity.pdfPassword != null &&\r\n      (\r\n        entity.pdfPassword.password != null ||\r\n        entity.pdfPassword.ownerPassword != null\r\n      )\r\n    ) {\r\n      extra.push('password')\r\n    }\r\n\r\n    if (entity.pdfSign != null && entity.pdfSign.certificateAssetShortid != null) {\r\n      extra.push('sign')\r\n    }\r\n\r\n    if (extra.length > 0) {\r\n      title = `${title} (${extra.join(', ')})`\r\n    }\r\n\r\n    return title\r\n  }\r\n\r\n  static selectAssets (entities) {\r\n    return Object.keys(entities).filter((k) => entities[k].__entitySet === 'assets').map((k) => entities[k])\r\n  }\r\n\r\n  componentDidMount () {\r\n    this.removeInvalidTemplateReferences()\r\n    this.removeInvalidAssetReferences()\r\n  }\r\n\r\n  componentDidUpdate () {\r\n    this.removeInvalidTemplateReferences()\r\n    this.removeInvalidAssetReferences()\r\n  }\r\n\r\n  openEditor () {\r\n    Studio.openTab({\r\n      key: this.props.entity._id + '_pdfUtils',\r\n      _id: this.props.entity._id,\r\n      editorComponentKey: Constants.PDF_UTILS_TAB_EDITOR,\r\n      titleComponentKey: Constants.PDF_UTILS_TAB_TITLE\r\n    })\r\n  }\r\n\r\n  removeInvalidTemplateReferences () {\r\n    const { entity, entities, onChange } = this.props\r\n\r\n    if (!entity.pdfOperations) {\r\n      return\r\n    }\r\n\r\n    let hasTemplateReferences = false\r\n    let updatedOperations\r\n\r\n    updatedOperations = entity.pdfOperations\r\n    hasTemplateReferences = entity.pdfOperations.filter(o => o.templateShortid != null).length > 0\r\n\r\n    if (hasTemplateReferences) {\r\n      updatedOperations = entity.pdfOperations.filter((o) => {\r\n        // tolerate operations recently added\r\n        if (o.templateShortid == null) {\r\n          return true\r\n        }\r\n\r\n        return Object.keys(entities).filter((k) => entities[k].__entitySet === 'templates' && entities[k].shortid === o.templateShortid).length\r\n      })\r\n    }\r\n\r\n    if (hasTemplateReferences && updatedOperations.length !== entity.pdfOperations.length) {\r\n      onChange({ _id: entity._id, pdfOperations: updatedOperations })\r\n    }\r\n  }\r\n\r\n  removeInvalidAssetReferences () {\r\n    const { entity, entities, onChange } = this.props\r\n\r\n    if (!entity.pdfSign) {\r\n      return\r\n    }\r\n\r\n    const updatedAssetItems = Object.keys(entities).filter((k) => entities[k].__entitySet === 'assets' && entities[k].shortid === entity.pdfSign.certificateAssetShortid)\r\n\r\n    if (updatedAssetItems.length === 0 && entity.pdfSign.certificateAssetShortid) {\r\n      onChange({\r\n        _id: entity._id,\r\n        pdfSign: {\r\n          ...entity.pdfSign,\r\n          certificateAssetShortid: null\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n  render () {\r\n    return (<div className='properties-section'>\r\n      <div className='form-group'>\r\n        <button onClick={() => this.openEditor()}>Configure</button>\r\n      </div>\r\n    </div>)\r\n  }\r\n}\r\n","import React from 'react'\n\nexport default (props) => <span>{props.entity.name + ' pdf utils ' + (props.entity.__isDirty ? '*' : '')}</span>\n","import React, { Component } from 'react'\r\nimport Studio from 'jsreport-studio'\r\nimport styles from './style.scss'\r\n\r\nconst EntityRefSelect = Studio.EntityRefSelect\r\n\r\nclass PdfUtilsEditor extends Component {\r\n  constructor (props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      activeTab: 'operations'\r\n    }\r\n  }\r\n\r\n  addOperation (entity) {\r\n    Studio.updateEntity(Object.assign({}, entity, { pdfOperations: [...entity.pdfOperations || [], { type: 'merge' }] }))\r\n  }\r\n\r\n  updateOperation (entity, index, update) {\r\n    Studio.updateEntity(Object.assign({}, entity, { pdfOperations: entity.pdfOperations.map((o, i) => i === index ? Object.assign({}, o, update) : o) }))\r\n  }\r\n\r\n  updateMeta (entity, update) {\r\n    let pdfMeta = entity.pdfMeta || {}\r\n\r\n    pdfMeta = { ...pdfMeta, ...update }\r\n\r\n    Object.keys(pdfMeta).forEach((metaKey) => {\r\n      if (pdfMeta[metaKey] === '') {\r\n        delete pdfMeta[metaKey]\r\n      }\r\n    })\r\n\r\n    const keys = Object.keys(pdfMeta)\r\n\r\n    if (keys.length === 0 || keys.every((k) => pdfMeta[k] == null)) {\r\n      const newEntity = Object.assign({}, entity)\r\n      newEntity.pdfMeta = null\r\n      return Studio.updateEntity(newEntity)\r\n    }\r\n\r\n    Studio.updateEntity(Object.assign({}, entity, { pdfMeta }))\r\n  }\r\n\r\n  updatePassword (entity, update) {\r\n    let pdfPassword = entity.pdfPassword || {}\r\n\r\n    pdfPassword = { ...pdfPassword, ...update }\r\n\r\n    Object.keys(pdfPassword).forEach((metaKey) => {\r\n      if (pdfPassword[metaKey] === '') {\r\n        delete pdfPassword[metaKey]\r\n      }\r\n    })\r\n\r\n    const keys = Object.keys(pdfPassword)\r\n\r\n    if (keys.length === 0 || keys.every((k) => pdfPassword[k] == null || pdfPassword[k] === false)) {\r\n      const newEntity = Object.assign({}, entity)\r\n      newEntity.pdfPassword = null\r\n      return Studio.updateEntity(newEntity)\r\n    }\r\n\r\n    Studio.updateEntity(Object.assign({}, entity, { pdfPassword }))\r\n  }\r\n\r\n  updateSign (entity, update) {\r\n    let pdfSign = entity.pdfSign || {}\r\n\r\n    pdfSign = { ...pdfSign, ...update }\r\n\r\n    Object.keys(pdfSign).forEach((metaKey) => {\r\n      if (pdfSign[metaKey] === '') {\r\n        delete pdfSign[metaKey]\r\n      }\r\n    })\r\n\r\n    const keys = Object.keys(pdfSign)\r\n\r\n    if (keys.length === 0 || keys.every((k) => pdfSign[k] == null)) {\r\n      const newEntity = Object.assign({}, entity)\r\n      newEntity.pdfSign = null\r\n      return Studio.updateEntity(newEntity)\r\n    }\r\n\r\n    Studio.updateEntity(Object.assign({}, entity, { pdfSign }))\r\n  }\r\n\r\n  removeOperation (entity, index) {\r\n    Studio.updateEntity(Object.assign({}, entity, { pdfOperations: entity.pdfOperations.filter((a, i) => i !== index) }))\r\n  }\r\n\r\n  moveDown (entity, index) {\r\n    const pdfOperations = [...entity.pdfOperations]\r\n    const tmp = pdfOperations[index + 1]\r\n    pdfOperations[index + 1] = pdfOperations[index]\r\n    pdfOperations[index] = tmp\r\n    Studio.updateEntity(Object.assign({}, entity, { pdfOperations: pdfOperations }))\r\n  }\r\n\r\n  moveUp (entity, index) {\r\n    const pdfOperations = [...entity.pdfOperations]\r\n    const tmp = pdfOperations[index - 1]\r\n    pdfOperations[index - 1] = pdfOperations[index]\r\n    pdfOperations[index] = tmp\r\n    Studio.updateEntity(Object.assign({}, entity, { pdfOperations: pdfOperations }))\r\n  }\r\n\r\n  renderOperation (entity, operation, index) {\r\n    return (\r\n      <tr key={index}>\r\n        <td style={{ minWidth: '170px' }}>\r\n          <EntityRefSelect\r\n            headingLabel='Select template'\r\n            filter={(references) => {\r\n              const templates = references.templates.filter((e) => e.shortid !== entity.shortid && e.recipe.includes('pdf'))\r\n              return { templates: templates }\r\n            }}\r\n            value={operation.templateShortid ? operation.templateShortid : null}\r\n            onChange={(selected) => this.updateOperation(entity, index, { templateShortid: selected != null && selected.length > 0 ? selected[0].shortid : null })}\r\n          />\r\n        </td>\r\n        <td>\r\n          <select\r\n            value={operation.type}\r\n            onChange={(v) => this.updateOperation(entity, index, { type: v.target.value })}>>\r\n            <option value='merge'>merge</option>\r\n            <option value='append'>append</option>\r\n            <option value='prepend'>prepend</option>\r\n          </select>\r\n        </td>\r\n        <td>\r\n          <input type='checkbox' disabled={operation.type !== 'merge'} checked={operation.mergeToFront === true} onChange={(v) => this.updateOperation(entity, index, { mergeToFront: v.target.checked })} />\r\n        </td>\r\n        <td>\r\n          <input type='checkbox' disabled={operation.type !== 'merge' || operation.mergeWholeDocument} checked={operation.renderForEveryPage === true} onChange={(v) => this.updateOperation(entity, index, { renderForEveryPage: v.target.checked, mergeWholeDocument: false })} />\r\n        </td>\r\n        <td>\r\n          <input type='checkbox' disabled={operation.type !== 'merge' || operation.renderForEveryPage} checked={operation.mergeWholeDocument === true} onChange={(v) => this.updateOperation(entity, index, { mergeWholeDocument: v.target.checked, renderForEveryPage: false })} />\r\n        </td>\r\n        <td>\r\n          <input type='checkbox' checked={operation.enabled !== false} onChange={(v) => this.updateOperation(entity, index, { enabled: v.target.checked })} />\r\n        </td>\r\n        <td>\r\n          <button className='button' style={{ backgroundColor: '#c6c6c6' }} onClick={() => this.removeOperation(entity, index)}><i className='fa fa-times' /></button>\r\n        </td>\r\n        <td>\r\n          {entity.pdfOperations[index - 1] ? <button className='button' style={{ backgroundColor: '#c6c6c6' }} onClick={() => this.moveUp(entity, index)}><i className='fa fa-arrow-up' /></button> : ''}\r\n        </td>\r\n        <td>\r\n          {entity.pdfOperations[index + 1] ? <button className='button' style={{ backgroundColor: '#c6c6c6' }} onClick={() => this.moveDown(entity, index)}><i className='fa fa-arrow-down' /></button> : ''}\r\n        </td>\r\n      </tr>\r\n    )\r\n  }\r\n\r\n  renderOperations (entity) {\r\n    return (<table className={styles.operationTable}>\r\n      <thead>\r\n        <tr>\r\n          <th>Template</th>\r\n          <th>Operation</th>\r\n          <th>Merge to front</th>\r\n          <th>Render for every page</th>\r\n          <th>Merge whole document</th>\r\n          <th>Enabled</th>\r\n          <th />\r\n          <th />\r\n          <th />\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {(entity.pdfOperations || []).map((o, i) => this.renderOperation(entity, o, i))}\r\n      </tbody>\r\n    </table>)\r\n  }\r\n\r\n  render () {\r\n    const { activeTab } = this.state\r\n    const { entity } = this.props\r\n\r\n    const pdfMeta = entity.pdfMeta || {}\r\n    const pdfPassword = entity.pdfPassword || {}\r\n    const pdfSign = entity.pdfSign || {}\r\n\r\n    return (\r\n      <div className='block custom-editor' style={{ overflowX: 'auto' }}>\r\n        <h1>\r\n          <i className='fa fa-file-pdf-o' /> pdf utils configuration\r\n        </h1>\r\n        <div className={styles.tabContainer}>\r\n          <ul className={styles.tabTitles}>\r\n            <li\r\n              className={`${styles.tabTitle} ${activeTab === 'operations' ? styles.active : ''}`}\r\n              onClick={() => this.setState({ activeTab: 'operations' })}\r\n            >\r\n              operations\r\n            </li>\r\n            <li\r\n              className={`${styles.tabTitle} ${activeTab === 'meta' ? styles.active : ''}`}\r\n              onClick={() => this.setState({ activeTab: 'meta' })}\r\n            >\r\n              meta\r\n            </li>\r\n            <li\r\n              className={`${styles.tabTitle} ${activeTab === 'password' ? styles.active : ''}`}\r\n              onClick={() => this.setState({ activeTab: 'password' })}\r\n            >\r\n              password\r\n            </li>\r\n            <li\r\n              className={`${styles.tabTitle} ${activeTab === 'sign' ? styles.active : ''}`}\r\n              onClick={() => this.setState({ activeTab: 'sign' })}\r\n            >\r\n              sign\r\n            </li>\r\n          </ul>\r\n          <div className={`${styles.tabPanel} ${activeTab === 'operations' ? styles.active : ''}`}>\r\n            <p style={{ marginTop: '1rem' }}>\r\n              Use merge/append operations to add dynamic headers or concatenate multiple pdf reports into one.\r\n              See more docs and examples <a href='https://jsreport.net/learn/pdf-utils'>here</a>.\r\n            </p>\r\n            <div style={{ marginTop: '1rem' }}>\r\n              {this.renderOperations(entity)}\r\n            </div>\r\n            <div style={{ marginTop: '1rem' }}>\r\n              <button className='button confirmation' onClick={() => this.addOperation(entity)}>Add operation</button>\r\n            </div>\r\n          </div>\r\n          <div className={`${styles.tabPanel} ${activeTab === 'meta' ? styles.active : ''}`}>\r\n            <p style={{ marginTop: '1rem' }}>\r\n              Add metadata information to the final PDF.\r\n            </p>\r\n            <div style={{ marginTop: '1rem', paddingBottom: '0.5rem' }}>\r\n              <div className='form-group'>\r\n                <label>Title</label>\r\n                <input type='text' value={pdfMeta.title || ''} onChange={(v) => this.updateMeta(entity, { title: v.target.value })} />\r\n              </div>\r\n              <div className='form-group'>\r\n                <label>Author</label>\r\n                <input type='text' value={pdfMeta.author || ''} onChange={(v) => this.updateMeta(entity, { author: v.target.value })} />\r\n              </div>\r\n              <div className='form-group'>\r\n                <label>Subject</label>\r\n                <input type='text' value={pdfMeta.subject || ''} onChange={(v) => this.updateMeta(entity, { subject: v.target.value })} />\r\n              </div>\r\n              <div className='form-group'>\r\n                <label>Keywords</label>\r\n                <input type='text' value={pdfMeta.keywords || ''} onChange={(v) => this.updateMeta(entity, { keywords: v.target.value })} />\r\n              </div>\r\n              <div className='form-group'>\r\n                <label>Creator</label>\r\n                <input type='text' value={pdfMeta.creator || ''} onChange={(v) => this.updateMeta(entity, { creator: v.target.value })} />\r\n              </div>\r\n              <div className='form-group'>\r\n                <label>Producer</label>\r\n                <input type='text' value={pdfMeta.producer || ''} onChange={(v) => this.updateMeta(entity, { producer: v.target.value })} />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className={`${styles.tabPanel} ${activeTab === 'password' ? styles.active : ''}`}>\r\n            <p style={{ marginTop: '1rem' }}>\r\n              Add encryption and access privileges to the final PDF.\r\n\r\n              You can specify either user password, owner password or both passwords. Behavior differs according to passwords you provides:\r\n\r\n              <ul>\r\n                <li>\r\n                  When only user password is provided, users with user password are able to decrypt the file and have full access to the document.\r\n                </li>\r\n                <li>\r\n                  When only owner password is provided, users are able to decrypt and open the document without providing any password, but the access is limited to those operations explicitly permitted. Users with owner password have full access to the document.\r\n                </li>\r\n                <li>\r\n                  When both passwords are provided, users with user password are able to decrypt the file but only have limited access to the file according to permission settings. Users with owner password have full access to the document.\r\n                </li>\r\n              </ul>\r\n            </p>\r\n            <div style={{ marginTop: '1rem', paddingBottom: '0.5rem' }}>\r\n              <div>\r\n                <h2>Encryption</h2>\r\n                <div key='password-field' className='form-group'>\r\n                  <label>User Password</label>\r\n                  <input\r\n                    type='password'\r\n                    autoComplete='off'\r\n                    title='Users will be prompted to enter the password to decrypt the file when opening it'\r\n                    placeholder='user password'\r\n                    value={pdfPassword.password || ''}\r\n                    onChange={(v) => this.updatePassword(entity, { password: v.target.value })}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div>\r\n                <h2>Access privileges</h2>\r\n                <p>\r\n                  To set access privileges for the PDF, you need to provide an owner password and permission settings.\r\n                </p>\r\n                <div key='owner-password-field' className='form-group'>\r\n                  <label>Owner Password</label>\r\n                  <input\r\n                    type='password'\r\n                    autoComplete='off'\r\n                    title='Users with the owner password will always have full access to the PDF (no matter the permission settings)'\r\n                    placeholder='owner password'\r\n                    value={pdfPassword.ownerPassword || ''}\r\n                    onChange={(v) => this.updatePassword(entity, { ownerPassword: v.target.value })}\r\n                  />\r\n                </div>\r\n                <div key='printing-permission-field' className='form-group'>\r\n                  <label>Printing permission</label>\r\n                  <select\r\n                    value={pdfPassword.printing || '-1'}\r\n                    title='Whether printing the file is allowed, and in which resolution the printing can be done'\r\n                    onChange={(v) => this.updatePassword(entity, { printing: v.target.value === '-1' ? null : v.target.value })}\r\n                  >\r\n                    <option key={'-1'} value={'-1'}>Not allowed</option>\r\n                    <option key={'lowResolution'} value={'lowResolution'} title='Allows the printing in degraded resolution'>Low Resolution</option>\r\n                    <option key={'highResolution'} value={'highResolution'} title='Allows the printing in the best resolution'>High Resolution</option>\r\n                  </select>\r\n                </div>\r\n                <div key='modify-permission-field' className='form-group'>\r\n                  <label title='Whether modifying the file is allowed'>\r\n                    Modify permission\r\n                    <br />\r\n                    <input\r\n                      type='checkbox' checked={pdfPassword.modifying === true}\r\n                      onChange={(v) => this.updatePassword(entity, { modifying: v.target.checked })}\r\n                    />\r\n                  </label>\r\n                </div>\r\n                <div key='copy-permission-field' className='form-group'>\r\n                  <label title='Whether copying text or graphics from the file is allowed'>\r\n                    Copy permission\r\n                    <br />\r\n                    <input\r\n                      type='checkbox' checked={pdfPassword.copying === true}\r\n                      onChange={(v) => this.updatePassword(entity, { copying: v.target.checked })}\r\n                    />\r\n                  </label>\r\n                </div>\r\n                <div key='annotation-permission-field' className='form-group'>\r\n                  <label title='Whether annotating, form filling the file is allowed'>\r\n                    Annotation permission\r\n                    <br />\r\n                    <input\r\n                      type='checkbox' checked={pdfPassword.annotating === true}\r\n                      onChange={(v) => this.updatePassword(entity, { annotating: v.target.checked })}\r\n                    />\r\n                  </label>\r\n                </div>\r\n                <div key='fillingForms-permission-field' className='form-group'>\r\n                  <label title='Whether form filling and signing the file is allowed'>\r\n                    Filling Forms permission\r\n                    <br />\r\n                    <input\r\n                      type='checkbox' checked={pdfPassword.fillingForms === true}\r\n                      onChange={(v) => this.updatePassword(entity, { fillingForms: v.target.checked })}\r\n                    />\r\n                  </label>\r\n                </div>\r\n                <div key='contentAccessibility-permission-field' className='form-group'>\r\n                  <label title='Whether copying text from the file for accessibility is allowed'>\r\n                    Content Accessibility permission\r\n                    <br />\r\n                    <input\r\n                      type='checkbox' checked={pdfPassword.contentAccessibility === true}\r\n                      onChange={(v) => this.updatePassword(entity, { contentAccessibility: v.target.checked })}\r\n                    />\r\n                  </label>\r\n                </div>\r\n                <div key='documentAssembly-permission-field' className='form-group'>\r\n                  <label title='Whether assembling document is allowed'>\r\n                    Assembling Document permission\r\n                    <br />\r\n                    <input\r\n                      type='checkbox' checked={pdfPassword.documentAssembly === true}\r\n                      onChange={(v) => this.updatePassword(entity, { documentAssembly: v.target.checked })}\r\n                    />\r\n                  </label>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className={`${styles.tabPanel} ${activeTab === 'sign' ? styles.active : ''}`}>\r\n            <p style={{ marginTop: '1rem' }}>\r\n              Add a digital signature to the final PDF.\r\n            </p>\r\n            <div style={{ marginTop: '1rem', paddingBottom: '0.5rem' }}>\r\n              <div className='form-group'>\r\n                <label>Select certificate (asset)</label>\r\n                <EntityRefSelect\r\n                  headingLabel='Select certificate'\r\n                  value={pdfSign.certificateAssetShortid || ''}\r\n                  onChange={(selected) => this.updateSign(entity, { certificateAssetShortid: selected.length > 0 ? selected[0].shortid : null })}\r\n                  filter={(references) => ({ data: references.assets })}\r\n                />\r\n              </div>\r\n              <div className='form-group'>\r\n                <label>Sign Reason filled to pdf</label>\r\n                <input type='text' placeholder='signed...' value={pdfSign.reason} onChange={(v) => this.updateSign(entity, { reason: v.target.value })} />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default PdfUtilsEditor\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"operationTable\":\"x-pdf-utils-style-operationTable\",\"tabContainer\":\"x-pdf-utils-style-tabContainer\",\"tabTitles\":\"x-pdf-utils-style-tabTitles\",\"tabTitle\":\"x-pdf-utils-style-tabTitle\",\"active\":\"x-pdf-utils-style-active\",\"tabPanel\":\"x-pdf-utils-style-tabPanel\"};"],"sourceRoot":""}